services:
  db:
    image: postgres
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_PASSWORD: example
    command:
      - "postgres"
      - "-c"
      - "wal_level=logical"
      - "-c"
      - "max_wal_senders=10"
      - "-c"
      - "max_replication_slots=10"

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
  redpanda-0:
    image: docker.redpanda.com/redpandadata/redpanda:v25.2.3
    container_name: redpanda-0
    command:
      - redpanda
      - start
      - --kafka-addr
      - internal://0.0.0.0:9092,external://0.0.0.0:19092
      - --advertise-kafka-addr
      - internal://redpanda-0:9092,external://localhost:19092
      - --pandaproxy-addr
      - internal://0.0.0.0:8082,external://0.0.0.0:18082
      - --advertise-pandaproxy-addr
      - internal://redpanda-0:8082,external://localhost:18082
      - --schema-registry-addr
      - internal://0.0.0.0:8081,external://0.0.0.0:18081
      - --mode
      - dev-container
      - --smp
      - "1"
      - --check=false
    ports:
      - "19092:19092" # Kafka (external)
      - "18081:18081" # Schema Registry
      - "18082:18082" # HTTP Proxy (REST produce/consume)
      - "19644:9644" # Admin API
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -fsS http://localhost:9644/v1/status/ready || exit 1",
        ]
      interval: 5s
      timeout: 3s
      retries: 30

  console:
    image: docker.redpanda.com/redpandadata/console:v3.2.1
    container_name: redpanda-console
    depends_on:
      redpanda-0:
        condition: service_healthy
    entrypoint: /bin/sh
    command: -c 'echo "$$CONSOLE_CONFIG_FILE" > /tmp/config.yml; /app/console'
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["redpanda-0:9092"]
        schemaRegistry:
          enabled: true
          urls: ["http://redpanda-0:8081"]
        redpanda:
          adminApi:
            enabled: true
            urls: ["http://redpanda-0:9644"]
    ports:
      - "8090:8080"
  connect:
    image: debezium/connect:2.6
    container_name: kafka-connect
    depends_on:
      redpanda-0:
        condition: service_healthy
    environment:
      BOOTSTRAP_SERVERS: redpanda-0:9092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: _connect_configs
      OFFSET_STORAGE_TOPIC: _connect_offsets
      STATUS_STORAGE_TOPIC: _connect_statuses

      # JSON converters (simpler for demos)
      KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      KEY_CONVERTER_SCHEMAS_ENABLE: "false"
      VALUE_CONVERTER_SCHEMAS_ENABLE: "false"

      # Connect REST API
      REST_ADVERTISED_HOST_NAME: connect
      REST_PORT: 8083
    ports:
      - "8083:8083"
